import telegram
from telegram.ext import (CommandHandler,MessageHandler,ConversationHandler,CallbackQueryHandler,RegexHandler,Filters)
from telegram import (ReplyKeyboardMarkup, InlineKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton)
import logging
import botconfig as config
import smtplib
from email.message import EmailMessage

anyTextPattern = "^(?!.*(–û—Ç–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ))"
startSupportRequestTextPattern = '^(–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üìû)$'
cancelTextPattern = '^(–û—Ç–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ)$'
logger = logging.getLogger('btcLogger')

reply_keyboard_main_menu = [['–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ üèÜ'], ['–°–∏–≥–Ω–∞–ª—ã üí∞'], ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã üìÇ','–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üìû'], ['–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üîê']]

SENDEMAIL = range(1)

def email(bot, update):
  keyboard = [['–û—Ç–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ']]
  logger.info('Someone starts writing to support. Chat id = {0}'.format(update.message.chat.id))
  bot.send_message(chat_id=update.message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–µ –≤ –±–æ—Ç–µ, –∞ –ø–æ email, —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ –∞–¥—Ä–µ—Å –≤ —Ç–µ–ª–µ –æ–±—Ä–∞—â–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞. –ö–æ–Ω–µ—á–Ω–æ, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é –Ω–∞ {0}.".format(config.EMAILTO), reply_markup = ReplyKeyboardMarkup(keyboard))
  return SENDEMAIL
 
def sendEmail(bot, update):
  try:
    messageText = update.message.text + '\n chat_id = {0}'.format(update.message.chat_id)
    sendEmail(messageText)
    bot.send_message(chat_id=update.message.chat_id, text="–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é.", reply_markup = ReplyKeyboardMarkup(reply_keyboard_main_menu))
    logger.info('Chat id = {0} successfully finished his support request. Request - '.format(update.message.chat_id, messageText))
  except Exception as e:
    logger.exception(e)
  finally:
    return ConversationHandler.END

def cancel(bot, update):
  bot.send_message(chat_id=update.message.chat_id, text="–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardMarkup(reply_keyboard_main_menu, one_time_keyboard=True))
  logger.info('Cancel Chat id = {0} canceled his support request'.format(update.message.chat_id))

  return ConversationHandler.END

support_conv_handler = ConversationHandler(
  entry_points=[RegexHandler(startSupportRequestTextPattern, email)],

  states={
  SENDEMAIL: [RegexHandler(anyTextPattern, sendEmail)],
  },

  fallbacks=[RegexHandler(cancelTextPattern, cancel)]
)

def sendEmail(message):
    msg = EmailMessage()
    msg.set_content(message)
    msg['Subject'] = '–û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    msg['From'] = config.EMAILFROM
    msg['To'] = config.EMAILTO
    conn = smtplib.SMTP("smtp.gmail.com")
    conn.ehlo()
    conn.starttls()
    conn.ehlo()
    conn.set_debuglevel(True)
    conn.login(config.EMAILFROM, config.EMAILFROMPAS)
    conn.send_message(msg)
    conn.quit()

def get_support_conv_handler():
  return support_conv_handler
